{
	"info": {
		"_postman_id": "ff29dd74-e4a4-44f9-823a-6516dbe3508a",
		"name": "MeTube-API",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "users",
			"item": [
				{
					"name": "Recreate db",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "cd1ea82a-7221-4ffc-9009-9b178056dc19",
								"exec": [
									"pm.test(\"Status code should be 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{host}}/db",
							"host": [
								"{{host}}"
							],
							"path": [
								"db"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET users empty",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "bda5987d-12d8-46ec-af99-62a6dfeae12f",
								"exec": [
									"",
									"pm.test(\"Status code should be 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"should have returned []\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.length).to.eql(0);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{host}}/users",
							"host": [
								"{{host}}"
							],
							"path": [
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "POST users no body",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "559e736b-dc7f-481c-9c7b-55133a3227ee",
								"exec": [
									"",
									"pm.test(\"Status code should be 200\", function () {",
									"    pm.response.to.have.status(400);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{host}}/users",
							"host": [
								"{{host}}"
							],
							"path": [
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "POST users create bob",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "559e736b-dc7f-481c-9c7b-55133a3227ee",
								"exec": [
									"",
									"pm.test(\"Status code should be 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"pm.test(\"should have returned user_id:1, username:bob\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData['user_id'] == 1 && jsonData['username'] == 'bob');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"username\":\"bob\"}"
						},
						"url": {
							"raw": "{{host}}/users",
							"host": [
								"{{host}}"
							],
							"path": [
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "POST users create joe",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "26ce2526-2d94-4404-bca6-e71dbff03ff5",
								"exec": [
									"",
									"pm.test(\"Status code should be 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"pm.test(\"should have returned user_id:2, username:joe\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData['user_id'] == 2 && jsonData['username'] == 'joe');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"username\":\"joe\"}"
						},
						"url": {
							"raw": "{{host}}/users",
							"host": [
								"{{host}}"
							],
							"path": [
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "POST users duplicate username",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "26ce2526-2d94-4404-bca6-e71dbff03ff5",
								"exec": [
									"",
									"pm.test(\"Status code should be 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"username\":\"joe\"}"
						},
						"url": {
							"raw": "{{host}}/users",
							"host": [
								"{{host}}"
							],
							"path": [
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET users",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "1459cfab-cd1a-48de-abf6-b92d0d09ae75",
								"exec": [
									"",
									"pm.test(\"Status code should be 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"pm.test(\"should have returned list of 2\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.length).to.eql(2);",
									"    pm.expect(jsonData[0]['user_id'] == 1 && jsonData[0]['username'] == 'bob');",
									"    pm.expect(jsonData[1]['user_id'] == 2 && jsonData[1]['username'] == 'joe');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{host}}/users",
							"host": [
								"{{host}}"
							],
							"path": [
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET user id 1 (bob)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "1459cfab-cd1a-48de-abf6-b92d0d09ae75",
								"exec": [
									"",
									"pm.test(\"Status code should be 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"pm.test(\"should have returned user_id:1, username:bob\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData['user_id'] == 1 && jsonData['username'] == 'bob');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{host}}/users/1",
							"host": [
								"{{host}}"
							],
							"path": [
								"users",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "DELETE user bob",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "522476eb-4e04-4aca-816b-aaf488972468",
								"exec": [
									"pm.test(\"Status code should be 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"pm.test(\"should have returned user_id:1, username:bob\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData['user_id'] == 1 && jsonData['username'] == 'bob');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{host}}/users/1",
							"host": [
								"{{host}}"
							],
							"path": [
								"users",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET user id 1 (bob) removed",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "1459cfab-cd1a-48de-abf6-b92d0d09ae75",
								"exec": [
									"",
									"pm.test(\"Status code should be 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{host}}/users/1",
							"host": [
								"{{host}}"
							],
							"path": [
								"users",
								"1"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "files",
			"item": [
				{
					"name": "Recreate db",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "cd1ea82a-7221-4ffc-9009-9b178056dc19",
								"exec": [
									"pm.test(\"Status code should be 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{host}}/db",
							"host": [
								"{{host}}"
							],
							"path": [
								"db"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET users empty",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "bda5987d-12d8-46ec-af99-62a6dfeae12f",
								"exec": [
									"",
									"pm.test(\"Status code should be 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"should have returned []\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.length).to.eql(0);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{host}}/users",
							"host": [
								"{{host}}"
							],
							"path": [
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "POST users create bob",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "559e736b-dc7f-481c-9c7b-55133a3227ee",
								"exec": [
									"",
									"pm.test(\"Status code should be 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"pm.test(\"should have returned user_id:1, username:bob\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData['user_id'] == 1 && jsonData['username'] == 'bob');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"username\":\"bob\"}"
						},
						"url": {
							"raw": "{{host}}/users",
							"host": [
								"{{host}}"
							],
							"path": [
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "POST users create joe",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "26ce2526-2d94-4404-bca6-e71dbff03ff5",
								"exec": [
									"",
									"pm.test(\"Status code should be 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"pm.test(\"should have returned user_id:2, username:joe\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData['user_id'] == 2 && jsonData['username'] == 'joe');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"username\":\"joe\"}"
						},
						"url": {
							"raw": "{{host}}/users",
							"host": [
								"{{host}}"
							],
							"path": [
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET users",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "1459cfab-cd1a-48de-abf6-b92d0d09ae75",
								"exec": [
									"",
									"pm.test(\"Status code should be 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"pm.test(\"should have returned list of 2\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.length).to.eql(2);",
									"    pm.expect(jsonData[0]['user_id'] == 1 && jsonData[0]['username'] == 'bob');",
									"    pm.expect(jsonData[1]['user_id'] == 2 && jsonData[1]['username'] == 'joe');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{host}}/users",
							"host": [
								"{{host}}"
							],
							"path": [
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "POST file for user id 1",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "file",
									"type": "file",
									"src": ""
								},
								{
									"key": "user_id",
									"value": "1",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{host}}/files/upload",
							"host": [
								"{{host}}"
							],
							"path": [
								"files",
								"upload"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Get trivial",
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{host}}",
					"host": [
						"{{host}}"
					]
				}
			},
			"response": []
		}
	]
}